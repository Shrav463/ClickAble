{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrav\\\\Downloads\\\\Digital_Literacy\\\\src\\\\components\\\\VoiceCommand.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceCommand = () => {\n  _s();\n  const [transcript, setTranscript] = useState(\"\");\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(\"Speech recognition is not supported in this browser.\");\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = false;\n    recognition.onresult = event => {\n      const lastResult = event.results[event.results.length - 1][0].transcript.trim().toLowerCase();\n      setTranscript(lastResult);\n      handleCommand(lastResult);\n    };\n    recognition.start();\n    return () => recognition.stop();\n  }, []);\n  const handleCommand = command => {\n    if (command.includes(\"help\")) {\n      speak(\"You said help. Here’s how to get assistance...\");\n    } else if (command.includes(\"read page\")) {\n      speak(document.body.innerText);\n    } else {\n      speak(\"Sorry, I didn’t understand that command.\");\n    }\n  };\n  const speak = message => {\n    const utterance = new SpeechSynthesisUtterance(message);\n    speechSynthesis.cancel();\n    speechSynthesis.speak(utterance);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sr-only\",\n    children: [\"Voice Command Active: \", transcript]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n};\n_s(VoiceCommand, \"Cd4SzhU1BeW8alRDfaqSf2s8kqY=\");\n_c = VoiceCommand;\nexport default VoiceCommand;\nvar _c;\n$RefreshReg$(_c, \"VoiceCommand\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","VoiceCommand","_s","transcript","setTranscript","SpeechRecognition","window","webkitSpeechRecognition","alert","recognition","continuous","interimResults","onresult","event","lastResult","results","length","trim","toLowerCase","handleCommand","start","stop","command","includes","speak","document","body","innerText","message","utterance","SpeechSynthesisUtterance","speechSynthesis","cancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shrav/Downloads/Digital_Literacy/src/components/VoiceCommand.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst VoiceCommand = () => {\r\n  const [transcript, setTranscript] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n    if (!SpeechRecognition) {\r\n      alert(\"Speech recognition is not supported in this browser.\");\r\n      return;\r\n    }\r\n\r\n    const recognition = new SpeechRecognition();\r\n    recognition.continuous = true;\r\n    recognition.interimResults = false;\r\n\r\n    recognition.onresult = (event) => {\r\n      const lastResult = event.results[event.results.length - 1][0].transcript.trim().toLowerCase();\r\n      setTranscript(lastResult);\r\n      handleCommand(lastResult);\r\n    };\r\n\r\n    recognition.start();\r\n\r\n    return () => recognition.stop();\r\n  }, []);\r\n\r\n  const handleCommand = (command) => {\r\n    if (command.includes(\"help\")) {\r\n      speak(\"You said help. Here’s how to get assistance...\");\r\n    } else if (command.includes(\"read page\")) {\r\n      speak(document.body.innerText);\r\n    } else {\r\n      speak(\"Sorry, I didn’t understand that command.\");\r\n    }\r\n  };\r\n\r\n  const speak = (message) => {\r\n    const utterance = new SpeechSynthesisUtterance(message);\r\n    speechSynthesis.cancel();\r\n    speechSynthesis.speak(utterance);\r\n  };\r\n\r\n  return <div className=\"sr-only\">Voice Command Active: {transcript}</div>;\r\n};\r\n\r\nexport default VoiceCommand;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMQ,iBAAiB,GAAGC,MAAM,CAACD,iBAAiB,IAAIC,MAAM,CAACC,uBAAuB;IAEpF,IAAI,CAACF,iBAAiB,EAAE;MACtBG,KAAK,CAAC,sDAAsD,CAAC;MAC7D;IACF;IAEA,MAAMC,WAAW,GAAG,IAAIJ,iBAAiB,CAAC,CAAC;IAC3CI,WAAW,CAACC,UAAU,GAAG,IAAI;IAC7BD,WAAW,CAACE,cAAc,GAAG,KAAK;IAElCF,WAAW,CAACG,QAAQ,GAAIC,KAAK,IAAK;MAChC,MAAMC,UAAU,GAAGD,KAAK,CAACE,OAAO,CAACF,KAAK,CAACE,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACb,UAAU,CAACc,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAC7Fd,aAAa,CAACU,UAAU,CAAC;MACzBK,aAAa,CAACL,UAAU,CAAC;IAC3B,CAAC;IAEDL,WAAW,CAACW,KAAK,CAAC,CAAC;IAEnB,OAAO,MAAMX,WAAW,CAACY,IAAI,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMF,aAAa,GAAIG,OAAO,IAAK;IACjC,IAAIA,OAAO,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;MAC5BC,KAAK,CAAC,gDAAgD,CAAC;IACzD,CAAC,MAAM,IAAIF,OAAO,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;MACxCC,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;IAChC,CAAC,MAAM;MACLH,KAAK,CAAC,0CAA0C,CAAC;IACnD;EACF,CAAC;EAED,MAAMA,KAAK,GAAII,OAAO,IAAK;IACzB,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACF,OAAO,CAAC;IACvDG,eAAe,CAACC,MAAM,CAAC,CAAC;IACxBD,eAAe,CAACP,KAAK,CAACK,SAAS,CAAC;EAClC,CAAC;EAED,oBAAO7B,OAAA;IAAKiC,SAAS,EAAC,SAAS;IAAAC,QAAA,GAAC,wBAAsB,EAAC/B,UAAU;EAAA;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC1E,CAAC;AAACpC,EAAA,CA3CID,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AA6ClB,eAAeA,YAAY;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}